<?php

namespace Mfpe\DataSocioEconomicBundle\Repository;

/**
 * SocioEconomicDataRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SocioEconomicDataRepository extends \Doctrine\ORM\EntityRepository
{
// get Institution Sante pour la premiere  periode
    public function getInstitutionSanteWithPagination($data)
    {
        $response = array();
        $emConfig = $this->getEntityManager()->getConfiguration();
        $emConfig->addCustomDatetimeFunction('YEAR', 'DoctrineExtensions\Query\Mysql\Year');
        $emConfig->addCustomDatetimeFunction('MONTH', 'DoctrineExtensions\Query\Mysql\Month');
        $emConfig->addCustomDatetimeFunction('DAY', 'DoctrineExtensions\Query\Mysql\Day');

        //Search pear page
        $query = $this->createQueryBuilder('SocioEconomicData')
            ->select("SocioEconomicData,uniteRegional,gouvernorat");
                    $query->leftJoin('SocioEconomicData.directionRegional', 'uniteRegional');
                    $query->leftJoin('uniteRegional.gouvernorat', 'gouvernorat');
        if (isset($data["governorate"]) && !empty($data["governorate"])|| isset($data["gouvernorat"]) && !empty($data["gouvernorat"])) {

            if (isset($data["governorate"])) {
                $gouvernorat = $data["gouvernorat"];
            } elseif (isset($data["gouvernorat"])) {
                $gouvernorat = $data["gouvernorat"];

            }

            $query->andWhere('gouvernorat.id = :gouvernorat')
                ->orWhere('gouvernorat.code = :gouvernorat')
                ->setParameter('gouvernorat', $gouvernorat);
        }

//        if (isset($data["gouvernorat"])&& !empty($data["gouvernorat"])) {
//            $query->where('gouvernorat.id = :gouvernate')
//                ->setParameter('gouvernate', $data["gouvernorat"]);
//        }
        if (isset($data["year"]) && !empty($data["year"])) {

            $query->andWhere('YEAR(SocioEconomicData.createdAt) = :year')
                ->setParameter('year', $data["year"]);
        }
        $response = $query->getQuery()->getArrayResult();
        //return result
        return $response;
    }


// get Institution Sante pour la deuxieme periode
    public function getInstitutionSanteWithPaginationP2($data)
    {
        $response = array();
        $emConfig = $this->getEntityManager()->getConfiguration();
        $emConfig->addCustomDatetimeFunction('YEAR', 'DoctrineExtensions\Query\Mysql\Year');
        $emConfig->addCustomDatetimeFunction('MONTH', 'DoctrineExtensions\Query\Mysql\Month');
        $emConfig->addCustomDatetimeFunction('DAY', 'DoctrineExtensions\Query\Mysql\Day');

        //Search pear page
        $query = $this->createQueryBuilder('SocioEconomicData')
            ->select("SocioEconomicData,uniteRegional,gouvernorat");
        $query->leftJoin('SocioEconomicData.directionRegional', 'uniteRegional');
        $query->leftJoin('uniteRegional.gouvernorat', 'gouvernorat');
        if (isset($data["gouvernorat"])&& !empty($data["gouvernorat"])) {
            $query->where('gouvernorat.id = :gouvernate')
                ->setParameter('gouvernate', $data["gouvernorat"]);
        }
        if (isset($data["yearSecondary"]) && !empty($data["yearSecondary"])) {
            $query->andWhere('YEAR(SocioEconomicData.createdAt) = :year')
                ->setParameter('year', $data["yearSecondary"]);
        }
        $response = $query->getQuery()->getArrayResult();
        //return result
        return $response;
    }

    // get Total Institution Sante pour la deuxieme periode
    public function getTotalInstitutionSanteWithPaginationP2($data)
    {
        $response = array();
        $emConfig = $this->getEntityManager()->getConfiguration();
        $emConfig->addCustomDatetimeFunction('YEAR', 'DoctrineExtensions\Query\Mysql\Year');
        $emConfig->addCustomDatetimeFunction('MONTH', 'DoctrineExtensions\Query\Mysql\Month');
        $emConfig->addCustomDatetimeFunction('DAY', 'DoctrineExtensions\Query\Mysql\Day');

        //Search pear page
        $query = $this->createQueryBuilder('SocioEconomicData')
        ->select("SUM(SocioEconomicData.healthInstitutionNumber) as healthInstitutionNumberNational",
        "SUM(SocioEconomicData.schoolInstitutionNumber) as schoolInstitutionNumberNational",
        "SUM(SocioEconomicData.universityInstitutionNumber) as universityInstitutionNumberNational",
        "SUM(SocioEconomicData.dropoutSchoolNumber) as dropoutSchoolNumberNational",
        "SUM(SocioEconomicData.needyFamilyNumber) as needyFamilyNumberNational",
        "SUM(SocioEconomicData.associationNumber) as associationNumberNational"
    );
//        $query->leftJoin('SocioEconomicData.directionRegional', 'uniteRegional');
//        $query->leftJoin('uniteRegional.gouvernorat', 'gouvernorat');
//        if (isset($data["gouvernorat"])&& !empty($data["gouvernorat"])) {
//            $query->where('gouvernorat.id = :gouvernate')
//                ->setParameter('gouvernate', $data["gouvernorat"]);
//        }
        if (isset($data["yearSecondary"]) && !empty($data["yearSecondary"])) {
            $query->andWhere('YEAR(SocioEconomicData.createdAt) = :year')
                ->setParameter('year', $data["yearSecondary"]);
        }
        $response = $query->getQuery()->getOneOrNullResult();
        //return result
        return $response;
    }


    public function getInstitutionSanteRoue($data,$year)
    {
        $response = array();
        $emConfig = $this->getEntityManager()->getConfiguration();
        $emConfig->addCustomDatetimeFunction('YEAR', 'DoctrineExtensions\Query\Mysql\Year');
        $emConfig->addCustomDatetimeFunction('MONTH', 'DoctrineExtensions\Query\Mysql\Month');
        $emConfig->addCustomDatetimeFunction('DAY', 'DoctrineExtensions\Query\Mysql\Day');

        //Search pear page
        $query = $this->createQueryBuilder('SocioEconomicData')
            ->select("SocioEconomicData,uniteRegional,gouvernorat");
        $query->leftJoin('SocioEconomicData.directionRegional', 'uniteRegional');
        $query->leftJoin('uniteRegional.gouvernorat', 'gouvernorat');
        if (isset($data)&& !empty($data)) {
            $query->orWhere('gouvernorat.id = :gouvernate')
                ->orWhere('gouvernorat.code = :gouvernate')
                ->setParameter('gouvernate', $data);
        }
        if (isset($year["year"]) && !empty($year["year"])) {
            $query->andWhere('YEAR(SocioEconomicData.createdAt) = :year')
                ->setParameter('year', $year["year"]);
        }
        $response = $query->getQuery()->getArrayResult();
        //return result
        return $response;
    }

}
